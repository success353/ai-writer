import Head from 'next/head'
import ImageGenerated from '../component/ImageGenerated'
import { useState } from 'react'
import { ArrowPathIcon } from '@heroicons/react/24/outline'

export default function Home() {
  const [prompt, setPrompt] = useState('')
  const [size, setSize] = useState('small')
  const [image, setImage] = useState('')
  const [loading, setLoading] = useState(false)
  async function handleSubmit(e) {
    e.preventDefault()
    setLoading(true)
    if (!prompt) {
      alert('Please add some text')
      return
    }
    generateImageRequest(prompt, size)
  }
  async function generateImageRequest(prompt, size) {
    try {
      const response = await fetch('/api/openai/generate', {
        method: 'POST',
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          prompt,
          size
        })
      })
      if (!response.ok) {
        throw new Error('That image could not be generated')
      }
      const data = await response.json()
      setLoading(false)
      setImage(data.image)
    } catch (error) {
      console.log(error.message)
    }
  }
  return (
    <div>
      <Head>
        <title>Ai Image Generator</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <section className="bg-white dark:bg-gray-900">
        <div className="py-8 lg:py-16 px-4 mx-auto max-w-screen-md">
          <h1 className='text-4xl lg:text-7xl text-gray-700 font-extrabold text-center mb-3'>The Next Gen Of Ai</h1>
          <p className="mb-8 lg:mb-16 font-light text-center text-gray-500 dark:text-gray-400 sm:text-xl">Fill in the input deatils to generate an Image.</p>
          <form className="space-y-8" onSubmit={handleSubmit}>
            <div>
              <label htmlFor="subject" className="block mb-2 text-sm font-medium">Enter Text to generate Image</label>
              <input type="text" id="subject" className="block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-primary-500 focus:border-primary-500" value={prompt} onChange={(e) => setPrompt(e.target.value)} placeholder="Enter Text" />
            </div>
            <select className='mr-5 w-96 rounded-lg text-2xl' value={size} onChange={(e) => setSize(e.target.value)}>
              <option value="small">Small</option>
              <option value="medium">Medium</option>
              <option value="large">Large</option>
            </select>
            {loading ? (
              <button
                className="px-10 py-3 text-sm font-medium text-center text-white rounded-lg bg-gray-700 sm:w-fit hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300"
              >
                <span>
                  <ArrowPathIcon className="w-5 text-white animate-spin group-hover:text-indigo-400" aria-hidden="true" />
                </span>
              </button>
            ) : (
              <button type="submit"
                className="py-3 px-5 text-sm font-medium text-center text-white rounded-lg bg-gray-700 sm:w-fit hover:bg-primary-800 focus:ring-4 focus:outline-none focus:ring-primary-300">GENERATE</button>
            )}
          </form>
        </div>
      </section>
      <ImageGenerated image={image} />
    </div>
  )
}
